{
  "_args": [
    [
      {
        "raw": "opt-cli@1.5.1",
        "scope": null,
        "escapedName": "opt-cli",
        "name": "opt-cli",
        "rawSpec": "1.5.1",
        "spec": "1.5.1",
        "type": "version"
      },
      "/Users/carlita/Desktop/Current_Coding/alien-gamev2/frontend/node_modules/ghooks"
    ]
  ],
  "_from": "opt-cli@1.5.1",
  "_id": "opt-cli@1.5.1",
  "_inCache": true,
  "_location": "/opt-cli",
  "_nodeVersion": "4.4.6",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/opt-cli-1.5.1.tgz_1466937700515_0.6848948167171329"
  },
  "_npmUser": {
    "name": "ta2edchimp",
    "email": "kontakt@andreaswindt.de"
  },
  "_npmVersion": "3.10.2",
  "_phantomChildren": {
    "graceful-readlink": "1.0.1",
    "lodash._baseclone": "4.5.7"
  },
  "_requested": {
    "raw": "opt-cli@1.5.1",
    "scope": null,
    "escapedName": "opt-cli",
    "name": "opt-cli",
    "rawSpec": "1.5.1",
    "spec": "1.5.1",
    "type": "version"
  },
  "_requiredBy": [
    "/ghooks"
  ],
  "_resolved": "https://registry.npmjs.org/opt-cli/-/opt-cli-1.5.1.tgz",
  "_shasum": "04db447b13c96b992eb31685266f4ed0d9736dc2",
  "_shrinkwrap": null,
  "_spec": "opt-cli@1.5.1",
  "_where": "/Users/carlita/Desktop/Current_Coding/alien-gamev2/frontend/node_modules/ghooks",
  "author": {
    "name": "Andreas Windt",
    "email": "email@andreaswindt.com",
    "url": "http://andreaswindt.com"
  },
  "bin": {
    "opt": "bin/index.js"
  },
  "bugs": {
    "url": "https://github.com/ta2edchimp/opt-cli/issues"
  },
  "config": {
    "ghooks": {
      "commit-msg": "validate-commit-msg",
      "pre-commit": "npm run validate"
    },
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "commander": "2.9.0",
    "lodash.clone": "4.3.2",
    "manage-path": "2.0.0",
    "spawn-command": "0.0.2-1"
  },
  "description": "Execute CLI Statements based upon Opt-In / Opt-Out Rules.",
  "devDependencies": {
    "all-contributors-cli": "3.0.5",
    "ava": "0.15.2",
    "codecov": "1.0.1",
    "commitizen": "2.8.2",
    "cz-conventional-changelog": "1.1.6",
    "eslint": "2.13.1",
    "eslint-config-idiomatic": "2.1.0",
    "eslint-config-ta2edchimp": "1.1.1",
    "ghooks": "1.2.4",
    "npm-run-all": "2.2.2",
    "nyc": "6.6.1",
    "proxyquire": "1.7.9",
    "semantic-release": "4.3.5",
    "validate-commit-msg": "2.6.1"
  },
  "directories": {},
  "dist": {
    "shasum": "04db447b13c96b992eb31685266f4ed0d9736dc2",
    "tarball": "https://registry.npmjs.org/opt-cli/-/opt-cli-1.5.1.tgz"
  },
  "gitHead": "3507a3840216283b562c2df28dcc85a53ec4ee57",
  "homepage": "https://github.com/ta2edchimp/opt-cli#readme",
  "keywords": [
    "executer",
    "cli",
    "opt-in",
    "opt-out"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "ta2edchimp",
      "email": "kontakt@andreaswindt.de"
    }
  ],
  "name": "opt-cli",
  "nyc": {
    "include": [
      "bin/**/*",
      "lib/**/*"
    ]
  },
  "optionalDependencies": {},
  "readme": "# opt-cli\nExecute CLI Statements based upon opt-in / out-out Rules.\n\n[![version](https://img.shields.io/npm/v/opt-cli.svg?style=flat-square)](http://npm.im/opt-cli)\n[![Build Status](https://img.shields.io/travis/ta2edchimp/opt-cli/master.svg?style=flat-square)](https://travis-ci.org/ta2edchimp/opt-cli)\n[![Code Coverage](https://img.shields.io/codecov/c/github/ta2edchimp/opt-cli.svg?style=flat-square)](https://codecov.io/github/ta2edchimp/opt-cli)\n[![Dependencies status](https://img.shields.io/david/ta2edchimp/opt-cli.svg?style=flat-square)](https://david-dm.org/ta2edchimp/opt-cli#info=dependencies)\n\n[![MIT License](https://img.shields.io/npm/l/opt-cli.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n[![downloads](https://img.shields.io/npm/dm/opt-cli.svg?style=flat-square)](http://npm-stat.com/charts.html?package=opt-cli&from=2016-03-20)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat-square)](https://github.com/semantic-release/semantic-release)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n[![All Contributors](https://img.shields.io/badge/all_contributors-4-orange.svg?style=flat-square)](#contributors)\n\n## Installation\n\nSimply install locally as a development dependency to your project's package:\n\n```\nnpm install --save-dev opt-cli\n```\n\n## Intended usage\nOpting in/out of a configured tasks, **best use case is for ghooks**.\n[This discussion](https://github.com/gtramontina/ghooks/issues/48#issuecomment-194002689) is the main motivation behind this module.\n\nYou can check out the [eslint-find-new-rules/package.json](https://github.com/kentcdodds/eslint-find-new-rules/blob/master/package.json#L67) for reference.\n\n### `opt --in`\n\n```JSON\n\"config\": {\n  \"ghooks\": {\n    \"pre-commit\": \"opt --in pre-commit --exec 'npm run validate'\"\n  }\n},\n```\n\nWhile `commit`ing, `npm run validate` **will not be executed** by default.\nHowever, one can **opt in by creating a `.opt-in` file in the root of the project, with the content `pre-commit`**\n\n#### `.opt-in`\n\nEach line in the `.opt-in` file, is the keyword used after the `opt --in` rule.\n\nSo for the above example, it's `pre-commit`\n\n```\ncat .opt-in\n# \"ghooks\": {\n#   \"pre-commit\": \"opt --in pre-commit --exec 'npm run validate'\"\n# }\npre-commit # the keyword used after the opt --in command\n```\n\n### `opt --out`\n\n`opt --out` works exactly, the opposite way of `opt --in`.\n\n```JSON\n\"config\": {\n  \"ghooks\": {\n    \"pre-commit\": \"opt --out pre-commit --exec 'npm run validate'\"\n  }\n},\n```\n\nIn this case, `npm run validate` **will be executed** before any changes can be `commit`ed.\nIn order to **opt out, you have to create a `.opt-out` file in the root of the project, with the content `pre-commit`**\n\n#### `.opt-out`\n\nSimilar to `.opt-in` file, each line in `.opt-out` file, is the keyword used after the `opt --out` rule.\n\nSo for the above example, it's `pre-commit`\n\n```\ncat .opt-out\n# \"ghooks\": {\n#   \"pre-commit\": \"opt --out pre-commit --exec 'npm run validate'\"\n# }\npre-commit # the keyword used after the opt --out command\n```\n\n* **don't forget to update `.gitignore` to ignore this file.**\n* `opt-in`, `opt-out` files can contain multiple rules\n* every line must contain only a single rule.\n* `#` can be used to comment any rule.\n\n## Use As Library\n\nYou may also include opt-cli as a library:\n\n```JavaScript\nvar opt = require( 'opt-cli' );\n```\n\nGiven the example setup from above, usage would be as follows:\n\n```JavaScript\nopt.testOptIn( 'pre-commit' ) === true\nopt.testOptOut( 'pre-push' ) === true\n```\n\nUsing `opt.getExplicitOpts()` you would receive:\n\n```JavaScript\n{\n  'pre-commit': true,\n  'pre-push': false\n}\n```\n\n## Advanced Usage\n\nRules to opt-into or opt-out of can also be specified using ...\n\n- ... an `in` or `out` array of a `package.json`'s `config.opt` field:\n\n```JSON\n\"config\": {\n  \"opt\": {\n    \"in\": [ \"pre-commit\" ],\n    \"out\": [ \"pre-push\" ]\n  }\n},\n```\n\n- ... the environment variables `OPT_IN` and `OPT_OUT`:\n\n```\n# Delimit multiple rules with \":\" on *nix / \";\" on Win\nexport OPT_IN=\"pre-commit\"\nexport OPT_OUT=\"pre-push\"\n```\n\n## Contributors\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n| [![Kent C. Dodds](https://avatars3.githubusercontent.com/u/1500684?v=3&s=100)<br /><sub>Kent C. Dodds</sub>](https://twitter.com/kentcdodds)<br />[üíª](https://github.com/ta2edchimp/opt-cli/commits?author=kentcdodds) üëÄ | [![Guilherme J. Tramontina](https://avatars2.githubusercontent.com/u/374635?v=3&s=100)<br /><sub>Guilherme J. Tramontina</sub>](https://github.com/gtramontina)<br />[üíª](https://github.com/ta2edchimp/opt-cli/commits?author=gtramontina) | [![Andreas Windt](https://avatars1.githubusercontent.com/u/262436?v=3&s=100)<br /><sub>Andreas Windt</sub>](https://twitter.com/ta2edchimp)<br />[üíª](https://github.com/ta2edchimp/opt-cli/commits?author=ta2edchimp) [üìñ](https://github.com/ta2edchimp/opt-cli/commits?author=ta2edchimp) [‚ö†Ô∏è](https://github.com/ta2edchimp/opt-cli/commits?author=ta2edchimp) | [![Sarbbottam Bandyopadhyay](https://avatars1.githubusercontent.com/u/949380?v=3&s=100)<br /><sub>Sarbbottam Bandyopadhyay</sub>](https://twitter.com/sarbbottam)<br />[üìñ](https://github.com/ta2edchimp/opt-cli/commits?author=sarbbottam) |\n| :---: | :---: | :---: | :---: |\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specification ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)).\n[Contributions of any kind welcome](CONTRIBUTING.md)!\n\nSpecial thanks to [@kentcdodds](https://github.com/kentcdodds) for encouraging to engage in oss, for the wonderful resources (check out the [Egghead videos!](https://egghead.io/series/how-to-write-an-open-source-javascript-library)) and ‚Äî together with [gtramontina](https://github.com/gtramontina) ‚Äî for coming up with [the original idea to this module](https://github.com/gtramontina/ghooks/issues/48#issuecomment-194002689)!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ta2edchimp/opt-cli.git"
  },
  "scripts": {
    "check-coverage": "nyc check-coverage --statements 100 --branches 100 --functions 100 --lines 100",
    "commit": "git-cz",
    "cover": "nyc --all --reporter=lcov --reporter=text ava",
    "lint": "eslint .",
    "report-coverage": "cat ./coverage/lcov.info | node_modules/.bin/codecov",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "ava",
    "update-contributors": "all-contributors generate",
    "validate": "npm-run-all --parallel lint cover --sequential check-coverage"
  },
  "version": "1.5.1"
}
